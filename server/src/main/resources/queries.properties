select.person = SELECT person_id, user_name, password, registration_date, email, contact_id, first_name, last_name, phone_number, role_id, role_name, is_employee_role FROM logistic_company.person INNER JOIN logistic_company.contact USING (contact_id) INNER JOIN logistic_company.person_role USING (person_id) INNER JOIN logistic_company.role USING (role_id) WHERE person_id = ?
select.person.by.username = SELECT person_id, user_name, password, registration_date, email, contact_id, first_name, last_name, phone_number, role_id, role_name, is_employee_role FROM logistic_company.person INNER JOIN logistic_company.contact USING (contact_id) INNER JOIN logistic_company.person_role USING (person_id) INNER JOIN logistic_company.role USING (role_id) WHERE user_name = ?
insert.person= INSERT INTO logistic_company.person (user_name, password, registration_date, contact_id) VALUES (?,?,?,?)
upsert.person = INSERT INTO logistic_company.person (person_id, user_name, password, registration_date, contact_id) VALUES (?,?,?,?,?) ON CONFLICT (person_id)  DO UPDATE SET (person_id, user_name, password, registration_date, contact_id) = (excluded.person_id,  excluded.user_name, excluded.password, excluded.registration_date, excluded.contact_id);
delete.person = DELETE FROM logistic_company.person WHERE person_id = ?
select.person.by.email.or.username = SELECT person_id, user_name, password, registration_date, email, contact_id, first_name, last_name, phone_number, role_id, role_name, is_employee_role FROM logistic_company.person INNER JOIN logistic_company.contact USING (contact_id) INNER JOIN logistic_company.person_role USING (person_id) INNER JOIN logistic_company.role USING (role_id) WHERE email = ? OR user_name = ?
select.person.employee = SELECT person_id, user_name, password, registration_date, email, contact_id, first_name, last_name, phone_number, role_id, role_name, is_employee_role FROM logistic_company.person INNER JOIN logistic_company.contact USING (contact_id) INNER JOIN logistic_company.person_role USING (person_id) INNER JOIN logistic_company.role USING (role_id) WHERE role.is_employee_role = TRUE
select.person.search = SELECT person_id, user_name, password, registration_date, email, contact_id, first_name, last_name, phone_number, role_id, role_name, is_employee_role, now()FROM logistic_company.person INNER JOIN logistic_company.contact USING (contact_id) INNER JOIN logistic_company.person_role USING (person_id) INNER JOIN logistic_company.role USING (role_id) WHERE first_name LIKE :first_name AND last_name LIKE :last_name AND registration_date BETWEEN :from AND :to AND role_id IN (:role_ids); 

insert.role = INSERT INTO logistic_company.role(role_name, is_employee_role) VALUES (?,?)
upsert.role = INSERT INTO  logistic_company.role(role_id, role_name, is_employee_role) VALUES (?,?,?) ON CONFLICT (role_id) DO UPDATE SET (role_id, role_name, is_employee_role) = (excluded.role_id, excluded.role_name, excluded.is_employee_role)
delete.role = DELETE FROM  logistic_company.role WHERE role_id = ?
select.role = SELECT role_id, role_name, is_employee_role FROM  logistic_company.role WHERE role_id=?
select.role.by.person_id = SELECT role.role_id, role_name, is_employee_role FROM logistic_company.person_role JOIN logistic_company.role ON (person_role.role_id = role.role_id) WHERE person_role.person_id = ?
select.role.by.name = SELECT role_id, role_name, is_employee_role FROM logistic_company.role WHERE role_name = ?
select.role.employee = SELECT role_id, role_name, is_employee_role FROM logistic_company.role WHERE is_employee_role = TRUE
select.role.client = SELECT role_id, role_name, is_employee_role FROM logistic_company.role WHERE is_employee_role = FALSE

select.order.by.person =SELECT order_id, creation_date, delivery_time, order_status_time, courier_id, receiver_id, sender_id, office_id, order_status_id FROM "order" WHERE sender_id=1;

select.registration_link= SELECT registration_link_id, person_id FROM logistic_company.registration_link WHERE registration_link_id = ?
insert.registration_link = INSERT INTO logistic_company.registration_link (registration_link_id, person_id) VALUES (?,?)
delete.registration_link = DELETE FROM  logistic_company.registration_link  WHERE registration_link_id = ?

upsert.person_role = INSERT INTO logistic_company.person_role (person_id, role_id) VALUES (?,?) ON CONFLICT DO NOTHING
delete.person_role = DELETE FROM logistic_company.person_role WHERE person_id = ? AND role_id = ?
delete.person_role.by.person_id = DELETE FROM logistic_company.person_role WHERE person_id = ?
select.person_role = SELECT person_id, role_id FROM person_role WHERE WHERE role_id = ? AND person_id = ?

insert.contact = INSERT INTO logistic_company.contact(first_name, last_name, phone_number, email)  VALUES (?,?,?,?);
upsert.contact =INSERT INTO logistic_company.contact(contact_id, first_name, last_name, phone_number, email)  VALUES (?,?,?,?,?) ON CONFLICT (contact_id) DO UPDATE SET (contact_id, first_name, last_name, phone_number, email) = (excluded.contact_id, excluded.first_name, excluded.last_name, excluded.phone_number, excluded.email);
delete.contact = DELETE FROM logistic_company.contact WHERE contact.contact_id = ?;
select.contact =  SELECT contact_id, first_name, last_name, phone_number, email FROM  logistic_company.contact WHERE contact_id = ?;
select.contact.by.phone_number.or.email = SELECT contact_id, first_name, last_name, phone_number, email FROM  logistic_company.contact WHERE phone_number = ? OR email = ?

insert.office = INSERT INTO logistic_company.office(name, address_id)  VALUES(?, ?);
upsert.office = INSERT INTO logistic_company.office(office_id, name, address_id)  VALUES(?, ?, ?) ON CONFLICT (office_id) DO UPDATE SET (office_id, name, address_id) = (excluded.office_id, excluded.name, excluded.address_id);
delete.office = DELETE  FROM  logistic_company.office WHERE office.office_id = ?;
select.office =  SELECT office_id, name, address.address_id, address.address_name  FROM logistic_company.office INNER JOIN address  ON office.address_id = address.address_id WHERE office.office_id = ?;
all.office =SELECT office_id, name, address.address_id, address.address_name  FROM logistic_company.office INNER JOIN address ON office.address_id = address.address_id;
all.office.by.department = SELECT office_id, name, office.address_id, address_name FROM logistic_company.office INNER JOIN address ON office.address_id = address.address_id WHERE office.name = ?;

insert.address = INSERT INTO logistic_company.address(address_name) VALUES (?);
upsert.address = INSERT INTO logistic_company.address(address_id, address_name) VALUES (?, ?)  ON CONFLICT (address_id) DO UPDATE SET (address_id, address_name) = (excluded.address_id, excluded.address_name);
delete.address = DELETE FROM logistic_company.address WHERE address_id = ?;
select.address = SELECT address_id, address_name FROM logistic_company.address WHERE address_id = ?;

insert.advertisement = INSERT INTO logistic_company.advertisement(caption, description, publication_date, publication_date_end, type_advertisement_id) VALUES (?, ?, ?, ?, ?)
update.advertisement = UPDATE logistic_company.advertisement SET caption = ?, description = ?, type_advertisement_id = ? WHERE advertisement_id = ?
delete.advertisement = DELETE FROM logistic_company.advertisement WHERE advertisement_id = ?
select.advertisement.type.by.name = SELECT type_advertisement_id, advertisement_name FROM logistic_company.advertisement_type WHERE advertisement_name = ?;
select.advertisement = SELECT advertisement_id, caption, description, publication_date, advertisement_type.type_advertisement_id, advertisement_type.advertisement_name FROM logistic_company.advertisement INNER JOIN advertisement_type ON advertisement.type_advertisement_id = advertisement_type.type_advertisement_id WHERE advertisement_id = ?
all.advertisements = SELECT advertisement_id, caption, description, publication_date, advertisement_type.type_advertisement_id, advertisement_type.advertisement_name FROM logistic_company.advertisement INNER JOIN advertisement_type ON advertisement.type_advertisement_id = advertisement_type.type_advertisement_id ORDER BY publication_date DESC;
